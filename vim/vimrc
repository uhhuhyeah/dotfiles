set nocompatible                  " Must come first because it changes other options.

let mapleader=","

syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.


runtime macros/matchit.vim        " Load the matchit plugin.

set noswapfile                    " Disable vim creating .swp files
set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set number                        " Show line numbers.
set ruler                         " Show cursor position.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.

set title                         " Set the terminal's title

set visualbell                    " No beeping.

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=$HOME/.vim/tmp//,.  " Keep swap files in one location

set autoread                      " If file contents have changed since last read, automatically reload the file from disk

" UNCOMMENT TO USE
set tabstop=2                    " Global tab width.
set shiftwidth=2                 " And again, related.
set expandtab                    " Use spaces instead of tabs

set laststatus=2                  " Show the status line all the time
" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

let g:vroom_use_colors = 1

" Tab mappings.
map <leader>tt :tabnew<cr>
map <leader>te :tabedit
map <leader>tc :tabclose<cr>
map <leader>to :tabonly<cr>
map <leader>tn :tabnext<cr>
map <leader>tp :tabprevious<cr>
map <leader>tf :tabfirst<cr>
map <leader>tl :tablast<cr>
map <leader>tm :tabmove
nmap <leader>l :set list!<cr> " Toggle showing invisibles

" Emulate TextMate's shift left/right key commands
nmap <D-[> <<
nmap <D-]> >>
vmap <D-[> <gv
vmap <D-]> >gv

" Uncomment to use Jamis Buck's file opening plugin
map <Leader>t :FuzzyFinderTextMate<Enter>
"Refresh FuzzyFinder's index
map <F12> :ruby finder.rescan!<Enter> 

" Ctrl-P (fuzzy finder)
set runtimepath^=~/.vim/bundle/ctrlp.vim

" Support for Command-Save
map <C-s> <esc>:w<CR>
imap <C-s> <esc>:w<CR>

"Toggle relative or absolute numbering
nnoremap <F3> :NumbersToggle<CR>

" Controversial...swap colon and semicolon for easier commands
"nnoremap ; :
"nnoremap : ;

"vnoremap ; :
"vnoremap : ;

" Clear the search buffer when hitting return
function! MapCR()
  nnoremap <cr> :nohlsearch<cr>
endfunction
call MapCR()

command W w "Write file even if I can't get my fat finger off the shift key

"Easier mapping for Ack
nnoremap <leader>a :Ack 

nnoremap <leader>vimrc <C-w><C-v><C-l>:e $MYVIMRC<cr> " Open .vimrc in new window

" Automatic fold settings for specific files. Uncomment to use.
" autocmd FileType ruby setlocal foldmethod=syntax
" autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2

" Save file when buffer looses focus
autocmd BufLeave,FocusLost * silent! wall

" Use the same chars to show invisibles as TextMate does
set listchars=tab:▸\ ,eol:¬

" BufferExplorer
let g:bufExplorerShowRelativePath=1

" Settings for VimClojure
let vimclojure#HighlightBuiltins=1  " Highlight Clojure's builtins
let vimclojure#ParenRainbow=1       " Rainbow parentheses'!

" Pathogen
call pathogen#infect()

colorscheme solarized
set guifont=Inconsolata\ for\ Powerline:h14       " Font family and font size.
let g:solarized_termtrans = 1
set background=dark               " Background.
call togglebg#map("<F5>")         " Map <F5> to toggle light/dark background

source /Library/Python/2.7/site-packages/powerline/bindings/vim/plugin/powerline.vim
